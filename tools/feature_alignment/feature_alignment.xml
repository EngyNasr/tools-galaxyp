<tool id="feature_alignment" name="TRIC" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@">
    <description>integrates information from all available runs via a graph-based alignment strategy</description>
     <macros>
        <token name="@TOOL_VERSION@">0.11.0</token>
        <token name="@GALAXY_VERSION@">0</token>
         <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="0.11.0">msproteomicstools</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    feature_alignment.py 
        --in #echo '" "'.join([ str($file) for $file in $inputs ])
        --out $out
        --file_format $iformat
        --method $method_sel.method
        --realign_method $realign_method
        #if $max_rt_diff:
            --max_rt_diff $max_rt_diff
        #end if
        #if $fdr_sel == "opt_target_fdr":
            --target_fdr $fdr_sel.target_fdr
        #else:
            --fdr_cutoff $fdr_sel.fdr_cutoff
        #end if
        --max_fdr_quality $max_fdr_quality
        #if $method_sel.method == "LocalMST" or $method_sel.method == "LocalMSTAllCluster":
            --mst:useRTCorrection $method_sel.mst_useRTCorrection
            --mst:Stdev_multiplier $method_sel.mst_Stdev_multiplier
            --mst:useLocalStdev $method_sel.mst_useLocalStdev
        #end if
        --disable_isotopic_grouping $further_params.disable_isotopic_grouping
        --use_dscore_filter $further_params.use_dscore_filter
        --dscore_cutoff $further_params.dscore_cutoff
        --nr_high_conf_exp $further_params.nr_high_conf_exp
        --readmethod $further_params.readmethod
        ## --tmpdir
        --alignment_score $further_params.alignment_score

        ## Add TRIC requantification later. See https://github.com/msproteomicstools/msproteomicstools/blob/master/TRIC-README.md
    ]]></command>
    <inputs>
        <param name="inputs" type="data" multiple="True" format="txt"
            label="A list of mProphet output files containing all peakgroups" help="(--in)"/>
        <param name="iformat" type="select" label="Which input file format is used" help="(--file_format)">
            <option value="openswath" selected="True">OpenSwath</option>
            <option value="peakview">Peakview</option>
        </param>
        <param name="fdr_cutoff" type="float" value="0.01" label="Seeding score cutoff" help="(--fdr_cutoff)" />
        <param name="max_fdr_quality" type="float" value="-1.0" optional="True"
            label="Extension score cutoff"
            help="During the extension phase of the algorithm, peakgroups of this quality will still be considered for alignment (in FDR) - it is possible to give a range in the format lower,higher+stepsize,stepsize - e.g. 0,0.31,0.01 (-1 will set it to fdr_cutoff) (--max_fdr_quality)"/>
        <param name="max_rt_diff" type="integer" value="30" optional="True"
            label="Maximal difference in RT for two aligned features" help="(--max_rt_diff)"/>
        <param name="iso_max_rt_diff" type="integer" value="10" optional="True"
            label="Maximal difference in RT for two isotopic channels in the same run" help="(--iso_max_rt_diff)" />
        <param name="frac_selected" type="float" value="0.0" min="0" max="1" optional="True"
            label="Do not write peakgroup if selected in less than this fraction of runs" help="(--frac_selected)"/>
        <param name="method" type="select"
            label="Which method to use for the clustering"
            help="Note that the MST options will perform a local, MST guided alignment while the other options will use a reference-guided alignment. The global option will also move peaks which are below the selected FDR threshold. (--method)" >
            <option value='best_overall' selected="True">best_overall</option>
            <option value='best_cluster_score'>best_cluster_score</option>
            <option value='global_best_cluster_score'>global_best_cluster_score</option>
            <option value='global_best_overall'>global_best_overall</option>
            <option value='LocalMST'>LocalMST</option>
            <option value='LocalMSTAllCluster'>LocalMSTAllCluster</option>
        </param>

        <param name="matrix_output_method" type="select"
            label="Which columns are written besides Intensity" help="(--matrix_output_method)">
            <option value='none' selected="True">None</option>
            <option value='RT'>RT</option>
            <option value='score'>Score</option>
            <option value='source'>Source</option>
            <option value='full'>Full</option>
        </param>
        <param name="realign_method" type="select" label="How to re-align runs in retention time" help="(--realign_method)">
            <option value='diRT' selected="True">Use only deltaiRT from the input file</option>
            <option value='linear'>Perform a linear regression using best peakgroups</option>
            <!--option value='splineR'>Perform a spline fit using R</option-->
            <!--option value='splineR_external'>Perform a spline fit using R</option-->
            <option value='splinePy'>Use Python native spline from scikits.datasmooth (slow!)</option>
            <option value='lowess'>Use Robust locally weighted regression (lowess smoother)</option>
            <option value='CVSpline'>Splines with cross-validation</option>
            <option value='nonCVSpline'>Splines without cross-validation</option>
            <option value='earth' >Use Multivariate Adaptive Regression Splines using py-earth</option>
        </param>
    </inputs>
    <outputs>
        <!-- Matrix containing one peak group per row -->
        <data format="tabular" name="out_matrix"/>
        <!-- Id file only containing the ids -->
        <data format="tabular" name="out_ids"/>
        <!-- Output file with filtered peakgroups for quantification (only works for OpenSWATH) -->
        <data format="tabular" name="out">
            <!-- according to the documentation this output only works for SWATH, 
            but it is a requirement argument in python argparse.
            So we need to output it. -->
            <!--filter>iformat == 'openswath'</filter-->
        </data>
    </outputs>
    <tests>
        <test>
            <param name="inputs" value="feature_alignment_openswath_input_1.csv" ftype="txt" />
            <param name="iformat" value="openswath" />
            <param name="method" value="best_cluster_score" />
            <param name="max_fdr_quality" value="0.4" />
            <param name="matrix_output_method" value="RT" />
            <output name="out_matrix" file="feature_alignment_1_openswath_output_matrix.csv" ftype="tabular" />
            <output name="out_ids" file="feature_alignment_1_openswath_output_cluster_ids.csv" ftype="tabular" />
        </test>
        <test>
            <param name="inputs" value="feature_alignment_openswath_input_1.csv" ftype="txt" />
            <param name="iformat" value="openswath" />
            <param name="method" value="best_overall" />
            <param name="max_fdr_quality" value="0.4" />
            <param name="matrix_output_method" value="RT" />
            <output name="out_matrix" file="feature_alignment_2_output_2_matrix.csv" ftype="tabular" />
            <output name="out_ids" file="feature_alignment_2_output_1_ids.csv" ftype="tabular" />
        </test>
        <!-- needs R dependency; The python equivalent should be enough I guess.
        <test>
            <param name="inputs" value="feature_alignment_3_openswath_input.csv" ftype="txt" />
            <param name="iformat" value="openswath" />
            <param name="realign_method" value="splineR" />
            <param name="method" value="best_cluster_score" />
            <param name="max_fdr_quality" value="0.4" />
            <param name="maxtrix_output_method" value="RT" />
            <output name="out_ids" file="feature_alignment_3_openswath_output_cluster_ids.csv" ftype="tabular" />
        </test>
        -->
        <test>
            <param name="inputs" value="feature_alignment_3_openswath_input.csv" ftype="txt" />
            <param name="iformat" value="openswath" />
            <param name="realign_method" value="splinePy" />
            <param name="method" value="best_cluster_score" />
            <param name="max_fdr_quality" value="0.4" />
            <param name="matrix_output_method" value="RT" />
            <output name="out_ids" file="feature_alignment_3_openswath_output_cluster_ids.csv" ftype="tabular" />
        </test>
        <test>
            <param name="inputs" value="feature_alignment_peakview_input_2.csv" ftype="txt" />
            <param name="iformat" value="peakview" />
            <param name="method" value="best_cluster_score" />
            <param name="max_fdr_quality" value="0.0001" />
            <param name="fdr_cutoff" value="0.000000001" />
            <param name="matrix_output_method" value="RT" />
            <output name="out_matrix" file="feature_alignment_5_peakview_output_matrix.csv" ftype="tabular" />
        </test>

    </tests>
    <help>
<![CDATA[

**What it does**

TRIC uses a graph-based alignment strategy based on non-linear retention time correction to integrate information from all available runs. The input consists of a set of csv files derived from a targeted proteomics experiment generated by OpenSWATH (using either mProphet or pyProphet) or generated by Peakview.

There are two basic running modes available. The first one uses a reference-based alignment where a single run is chosen as a reference and all other runs are aligned to it. This is a useful choice for a small number of runs that are chromatographically similar. The second mode generates a guidance tree based on chromatographic similarity of the input runs and uses this tree to align the targeted proteomics runs (the nodes in the tree are runs and the edges are pairwise alignments). Generally this mode is better for a large number of runs or for chromatographically dissimilar samples.

TRIC is part of msproteomicstools. For additional help please visit the `TRIC documentation <https://github.com/msproteomicstools/msproteomicstools/blob/master/TRIC-README.md>`_

]]>
    </help>
    <citations>
    </citations>
</tool>

